// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/api/operator/v1"
)

// CSIDriverConfigSpecApplyConfiguration represents an declarative configuration of the CSIDriverConfigSpec type for use
// with apply.
type CSIDriverConfigSpecApplyConfiguration struct {
	DriverName *v1.CSIDriverName                             `json:"driverName,omitempty"`
	VSphere    *VSphereCSIDriverConfigSpecApplyConfiguration `json:"vsphere,omitempty"`
}

// CSIDriverConfigSpecApplyConfiguration constructs an declarative configuration of the CSIDriverConfigSpec type for use with
// apply.
func CSIDriverConfigSpec() *CSIDriverConfigSpecApplyConfiguration {
	return &CSIDriverConfigSpecApplyConfiguration{}
}

// WithDriverName sets the DriverName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DriverName field is set to the value of the last call.
func (b *CSIDriverConfigSpecApplyConfiguration) WithDriverName(value v1.CSIDriverName) *CSIDriverConfigSpecApplyConfiguration {
	b.DriverName = &value
	return b
}

// WithVSphere sets the VSphere field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the VSphere field is set to the value of the last call.
func (b *CSIDriverConfigSpecApplyConfiguration) WithVSphere(value *VSphereCSIDriverConfigSpecApplyConfiguration) *CSIDriverConfigSpecApplyConfiguration {
	b.VSphere = value
	return b
}
